// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// get_paths.cpp
cpp11::list get_paths(cpp11::integers parent);
extern "C" SEXP _tidygraph_get_paths(SEXP parent) {
  BEGIN_CPP11
    return cpp11::as_sexp(get_paths(cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(parent)));
  END_CPP11
}
// get_paths.cpp
cpp11::list collect_offspring(cpp11::list_of<cpp11::integers> offspring, cpp11::integers order);
extern "C" SEXP _tidygraph_collect_offspring(SEXP offspring, SEXP order) {
  BEGIN_CPP11
    return cpp11::as_sexp(collect_offspring(cpp11::as_cpp<cpp11::decay_t<cpp11::list_of<cpp11::integers>>>(offspring), cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(order)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_tidygraph_collect_offspring", (DL_FUNC) &_tidygraph_collect_offspring, 2},
    {"_tidygraph_get_paths",         (DL_FUNC) &_tidygraph_get_paths,         1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_tidygraph(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
